# Generated by Django 5.2.5 on 2025-08-20 23:02

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_alter_patient_address_alter_patient_date_of_birth_and_more'),
        ('appointments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('specimen_type', models.CharField(choices=[('blood', 'Blood'), ('serum', 'Serum'), ('plasma', 'Plasma'), ('urine', 'Urine'), ('stool', 'Stool'), ('sputum', 'Sputum'), ('csf', 'Cerebrospinal Fluid'), ('tissue', 'Tissue'), ('swab', 'Swab'), ('saliva', 'Saliva'), ('other', 'Other')], max_length=20)),
                ('specimen_volume', models.CharField(blank=True, max_length=50)),
                ('normal_range_male', models.TextField(blank=True)),
                ('normal_range_female', models.TextField(blank=True)),
                ('normal_range_pediatric', models.TextField(blank=True)),
                ('turnaround_time_hours', models.IntegerField(default=24)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('preparation_instructions', models.TextField(blank=True)),
                ('methodology', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Test Categories',
            },
        ),
        migrations.CreateModel(
            name='LabOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('priority', models.CharField(choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('stat', 'STAT'), ('timed', 'Timed')], default='routine', max_length=20)),
                ('clinical_indication', models.TextField(blank=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_orders', to='appointments.appointment')),
                ('ordered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_orders_created', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_orders', to='accounts.patient')),
            ],
            options={
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='LabOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(blank=True, max_length=200)),
                ('test_code', models.CharField(blank=True, max_length=50)),
                ('specimen_type', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(choices=[('ordered', 'Ordered'), ('sample_pending', 'Sample Collection Pending'), ('sample_collected', 'Sample Collected'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='ordered', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('lab_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='lab.laborder')),
                ('lab_test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lab.labtest')),
            ],
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_value', models.TextField()),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('reference_range', models.CharField(blank=True, max_length=200)),
                ('abnormal_flag', models.CharField(choices=[('normal', 'Normal'), ('high', 'High'), ('low', 'Low'), ('critical_high', 'Critical High'), ('critical_low', 'Critical Low'), ('abnormal', 'Abnormal')], default='normal', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('preliminary', 'Preliminary'), ('final', 'Final'), ('corrected', 'Corrected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('performed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('interpretation', models.TextField(blank=True)),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='lab.laborderitem')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lab_results_performed', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lab_results_reviewed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CriticalValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_sent_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('action_taken', models.TextField(blank=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='critical_alerts_acknowledged', to=settings.AUTH_USER_MODEL)),
                ('notified_personnel', models.ManyToManyField(blank=True, related_name='critical_notifications', to=settings.AUTH_USER_MODEL)),
                ('result', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='critical_alert', to='lab.labresult')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(max_length=100, unique=True)),
                ('collected_at', models.DateTimeField()),
                ('collection_site', models.CharField(blank=True, max_length=100)),
                ('received_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('collected', 'Collected'), ('in_transit', 'In Transit'), ('received', 'Received'), ('rejected', 'Rejected'), ('processed', 'Processed')], default='collected', max_length=20)),
                ('rejection_reason', models.CharField(blank=True, choices=[('insufficient_volume', 'Insufficient Volume'), ('hemolyzed', 'Hemolyzed'), ('contaminated', 'Contaminated'), ('improper_collection', 'Improper Collection'), ('expired', 'Expired'), ('mislabeled', 'Mislabeled'), ('other', 'Other')], max_length=50)),
                ('volume_collected', models.CharField(blank=True, max_length=50)),
                ('container_type', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('collected_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples_collected', to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lab.laborderitem')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples_received', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='labresult',
            name='sample',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='lab.sample'),
        ),
        migrations.AddField(
            model_name='labtest',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='lab.testcategory'),
        ),
    ]
