# Generated by Django 5.2.5 on 2025-08-20 23:02

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_alter_patient_address_alter_patient_date_of_birth_and_more'),
        ('appointments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounter_type', models.CharField(choices=[('outpatient', 'Outpatient Visit'), ('inpatient', 'Inpatient Admission'), ('emergency', 'Emergency Visit'), ('surgery', 'Surgery'), ('consultation', 'Consultation'), ('follow_up', 'Follow-up'), ('telemedicine', 'Telemedicine')], max_length=20)),
                ('encounter_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('chief_complaint', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='encounter', to='appointments.appointment')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='appointments.department')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encounters_provided', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-encounter_date'],
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis_type', models.CharField(choices=[('primary', 'Primary Diagnosis'), ('secondary', 'Secondary Diagnosis'), ('differential', 'Differential Diagnosis'), ('rule_out', 'Rule Out')], max_length=20)),
                ('condition', models.CharField(max_length=300)),
                ('icd_10_code', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True)),
                ('diagnosis_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('resolved_date', models.DateField(blank=True, null=True)),
                ('diagnosed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses_made', to=settings.AUTH_USER_MODEL)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='medical_records.encounter')),
            ],
        ),
        migrations.CreateModel(
            name='ClinicalNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('history_physical', 'History & Physical'), ('progress_note', 'Progress Note'), ('consultation', 'Consultation Note'), ('discharge_summary', 'Discharge Summary'), ('operative_note', 'Operative Note'), ('nursing_note', 'Nursing Note'), ('assessment_plan', 'Assessment & Plan'), ('other', 'Other')], max_length=20)),
                ('subjective', models.TextField(blank=True)),
                ('objective', models.TextField(blank=True)),
                ('assessment', models.TextField(blank=True)),
                ('plan', models.TextField(blank=True)),
                ('additional_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_signed', models.BooleanField(default=False)),
                ('signed_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinical_notes_authored', to=settings.AUTH_USER_MODEL)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinical_notes', to='medical_records.encounter')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_type', models.CharField(blank=True, max_length=5)),
                ('emergency_contact', models.TextField(blank=True)),
                ('insurance_info', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_record', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_type', models.CharField(choices=[('chronic_condition', 'Chronic Condition'), ('past_surgery', 'Past Surgery'), ('past_hospitalization', 'Past Hospitalization'), ('family_history', 'Family History'), ('social_history', 'Social History'), ('other', 'Other')], max_length=30)),
                ('condition', models.CharField(max_length=300)),
                ('icd_code', models.CharField(blank=True, max_length=20)),
                ('date_occurred', models.DateField(blank=True, null=True)),
                ('date_resolved', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('is_ongoing', models.BooleanField(default=False)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_history', to='medical_records.medicalrecord')),
            ],
        ),
        migrations.AddField(
            model_name='encounter',
            name='medical_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encounters', to='medical_records.medicalrecord'),
        ),
        migrations.CreateModel(
            name='RecordAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('view', 'View'), ('edit', 'Edit'), ('create', 'Create'), ('delete', 'Delete')], max_length=20)),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('accessed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_accesses', to=settings.AUTH_USER_MODEL)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='medical_records.medicalrecord')),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(choices=[('medication', 'Medication'), ('procedure', 'Procedure'), ('therapy', 'Therapy'), ('surgery', 'Surgery'), ('follow_up', 'Follow-up'), ('referral', 'Referral'), ('lifestyle', 'Lifestyle Modification'), ('monitoring', 'Monitoring'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('target_completion_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='planned', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='medical_records.encounter')),
                ('prescribed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans_prescribed', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systolic_bp', models.IntegerField(blank=True, null=True)),
                ('diastolic_bp', models.IntegerField(blank=True, null=True)),
                ('heart_rate', models.IntegerField(blank=True, null=True)),
                ('respiratory_rate', models.IntegerField(blank=True, null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('oxygen_saturation', models.IntegerField(blank=True, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('bmi', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('pain_score', models.IntegerField(blank=True, null=True)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='medical_records.encounter')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitals_recorded', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergen', models.CharField(max_length=200)),
                ('allergy_type', models.CharField(choices=[('drug', 'Drug/Medication'), ('food', 'Food'), ('environmental', 'Environmental'), ('latex', 'Latex'), ('other', 'Other')], max_length=20)),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('life_threatening', 'Life Threatening')], max_length=20)),
                ('reaction', models.TextField()),
                ('date_identified', models.DateField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('identified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergies', to='medical_records.medicalrecord')),
            ],
            options={
                'unique_together': {('medical_record', 'allergen')},
            },
        ),
    ]
