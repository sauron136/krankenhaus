# Generated by Django 5.2.5 on 2025-08-20 23:02

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(choices=[('MEDICAL_SUPPLY', 'Medical Supply'), ('PHARMACEUTICAL', 'Pharmaceutical'), ('EQUIPMENT', 'Equipment'), ('STERILE_SUPPLY', 'Sterile Supply')], max_length=20)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('reorder_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('reorder_quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DISCONTINUED', 'Discontinued')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location_type', models.CharField(choices=[('WARD', 'Ward'), ('STORAGE', 'Storage Room'), ('PHARMACY', 'Pharmacy'), ('OR', 'Operating Room'), ('ICU', 'ICU'), ('ER', 'Emergency Room'), ('LAB', 'Laboratory'), ('MAINTENANCE', 'Maintenance'), ('OTHER', 'Other')], max_length=20)),
                ('floor', models.CharField(blank=True, max_length=10)),
                ('room_number', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.item')),
                ('equipment_type', models.CharField(choices=[('DIAGNOSTIC', 'Diagnostic Equipment'), ('THERAPEUTIC', 'Therapeutic Equipment'), ('SURGICAL', 'Surgical Equipment'), ('MONITORING', 'Monitoring Equipment'), ('MOBILITY', 'Mobility Equipment'), ('FURNITURE', 'Medical Furniture')], max_length=20)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('manufacture_date', models.DateField(blank=True, null=True)),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('maintenance_interval_days', models.IntegerField(blank=True, null=True)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('is_portable', models.BooleanField(default=True)),
                ('power_requirements', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
            },
            bases=('inventory.item',),
        ),
        migrations.CreateModel(
            name='MedicalSupply',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.item')),
                ('supply_type', models.CharField(choices=[('DISPOSABLE', 'Disposable'), ('REUSABLE', 'Reusable'), ('IMPLANT', 'Implant')], max_length=20)),
                ('is_sterile', models.BooleanField(default=False)),
                ('latex_free', models.BooleanField(default=True)),
                ('size', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Medical Supply',
                'verbose_name_plural': 'Medical Supplies',
            },
            bases=('inventory.item',),
        ),
        migrations.CreateModel(
            name='Pharmaceutical',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.item')),
                ('generic_name', models.CharField(blank=True, max_length=255)),
                ('brand_name', models.CharField(blank=True, max_length=255)),
                ('dosage_form', models.CharField(choices=[('TABLET', 'Tablet'), ('CAPSULE', 'Capsule'), ('LIQUID', 'Liquid'), ('INJECTION', 'Injection'), ('CREAM', 'Cream'), ('OINTMENT', 'Ointment'), ('INHALER', 'Inhaler'), ('DROPS', 'Drops')], max_length=20)),
                ('strength', models.CharField(max_length=100)),
                ('controlled_schedule', models.CharField(blank=True, choices=[('', 'Not Controlled'), ('I', 'Schedule I'), ('II', 'Schedule II'), ('III', 'Schedule III'), ('IV', 'Schedule IV'), ('V', 'Schedule V')], max_length=5)),
                ('requires_prescription', models.BooleanField(default=True)),
                ('storage_temperature', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Pharmaceutical',
                'verbose_name_plural': 'Pharmaceuticals',
            },
            bases=('inventory.item',),
        ),
        migrations.CreateModel(
            name='SterileSupply',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.item')),
                ('sterilization_method', models.CharField(choices=[('AUTOCLAVE', 'Autoclave'), ('ETO', 'Ethylene Oxide'), ('RADIATION', 'Gamma Radiation'), ('PLASMA', 'Hydrogen Peroxide Plasma')], max_length=20)),
                ('sterile_until', models.DateField()),
                ('package_integrity', models.BooleanField(default=True)),
                ('resterilizable', models.BooleanField(default=False)),
                ('sterilization_cycles', models.IntegerField(default=0)),
                ('max_sterilization_cycles', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Sterile Supply',
                'verbose_name_plural': 'Sterile Supplies',
            },
            bases=('inventory.item',),
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('TRANSFER', 'Transfer'), ('ADJUSTMENT', 'Adjustment'), ('EXPIRED', 'Expired'), ('DAMAGED', 'Damaged')], max_length=20)),
                ('quantity', models.IntegerField()),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.location')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.supplier'),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('lot_number', models.CharField(blank=True, max_length=100)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_records', to='inventory.item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.location')),
            ],
            options={
                'unique_together': {('item', 'location', 'lot_number')},
            },
        ),
    ]
